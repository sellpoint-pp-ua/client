"use client";
import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { storeService } from '@/services/storeService';
import { authService } from '@/services/authService';
import { Store, StoreRequest } from '@/types/store';
import Header from '@/components/layout/Header';
import SiteFooter from '@/components/layout/SiteFooter';

export default function StoreManagementPage() {
  const [store, setStore] = useState<Store | null>(null);
  const [storeRequests, setStoreRequests] = useState<StoreRequest[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [currentUserId, setCurrentUserId] = useState<string | null>(null);
  const router = useRouter();

  useEffect(() => {
    checkAuthAndLoadStore();
  }, []);

  useEffect(() => {
    if (currentUserId) {
      loadStore();
    }
  }, [currentUserId]);

  const checkAuthAndLoadStore = async () => {
    try {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
      const isAuthenticated = await authService.checkAuth();
      if (!isAuthenticated) {
        router.push('/auth/login');
        return;
      }

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      await loadCurrentUser();
    } catch (error) {
      console.error('Error checking auth status:', error);
      router.push('/auth/login');
    }
  };

  const loadCurrentUser = async () => {
    try {
      const user = await storeService.getCurrentUser();
      console.log('Current user:', user);
      setCurrentUserId(user.id || user.userId || user.Id || user.ID || user._id);
    } catch (error) {
      console.error('Could not load current user:', error);
      setCurrentUserId(null);
    }
  };

  const loadStore = async () => {
    if (!currentUserId) {
      setError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      setIsLoading(false);
      return;
    }

    try {
      setIsLoading(true);
      setError(null);
      
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–∞–≥–∞–∑–∏–Ω–∏ —Ç–∞ –∑–∞—è–≤–∫–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ
      const [storesResponse, requestsResponse] = await Promise.all([
        storeService.getMyStores(),
        storeService.getRequestByMyId()
      ]);
      
      console.log('User stores response:', storesResponse);
      console.log('User requests response:', requestsResponse);
      
      // –û–±—Ä–æ–±–ª—è—î–º–æ –º–∞–≥–∞–∑–∏–Ω–∏
      let allStores: Store[] = [];
      if (Array.isArray(storesResponse)) {
        allStores = storesResponse as Store[];
      } else if (storesResponse.success && storesResponse.data) {
        allStores = storesResponse.data as Store[];
      }

      // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –º–∞–≥–∞–∑–∏–Ω–∏ –∑–∞ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      const stores = allStores.filter(store => {
        return store.roles && store.roles[currentUserId] !== undefined;
      });

      // –û–±—Ä–æ–±–ª—è—î–º–æ –∑–∞—è–≤–∫–∏
      let requests: StoreRequest[] = [];
      if (Array.isArray(requestsResponse)) {
        requests = requestsResponse as StoreRequest[];
      } else if (requestsResponse && typeof requestsResponse === 'object') {
        const response = requestsResponse as any;
        if (response.success && response.data) {
          requests = response.data as StoreRequest[];
        } else if (response.id) {
          // –û–¥–Ω–∞ –∑–∞—è–≤–∫–∞ —è–∫ –æ–±'—î–∫—Ç
          requests = [{
            id: response.id ?? '',
            name: response.name ?? '',
            plan: response.plan ?? 0,
            userId: response.userId ?? '',
            status: response.status ?? 'pending',
            createdAt: response.createdAt ?? '',
            updatedAt: response.updatedAt,
            adminId: response.adminId,
            adminComment: response.adminComment,
            fileUrl: response.fileUrl,
            approvedByAdminId: response.approvedByAdminId,
            rejectedByAdminId: response.rejectedByAdminId,
            avatar: response.avatar,
          }];
        }
      }

      setStoreRequests(requests);

      if (stores.length === 0) {
        setError('–£ –≤–∞—Å –Ω–µ–º–∞—î –º–∞–≥–∞–∑–∏–Ω—ñ–≤');
        return;
      }

      // –Ø–∫—â–æ —î —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω –º–∞–≥–∞–∑–∏–Ω, –ø–æ–∫–∞–∑—É—î–º–æ –π–æ–≥–æ
      if (stores.length === 1) {
        setStore(stores[0]);
        return;
      }

      // –Ø–∫—â–æ —î –∫—ñ–ª—å–∫–∞ –º–∞–≥–∞–∑–∏–Ω—ñ–≤, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ /stores
      router.push('/stores');
    } catch (err) {
      console.error('Error loading store:', err);
      setError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–∞–≥–∞–∑–∏–Ω—É');
    } finally {
      setIsLoading(false);
    }
  };

  const handleDeleteStore = async (storeId: string) => {
    if (!confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –º–∞–≥–∞–∑–∏–Ω?')) {
      return;
    }

    try {
      await storeService.deleteStore(storeId);
      router.push('/stores');
      alert('–ú–∞–≥–∞–∑–∏–Ω —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ');
    } catch (err) {
      console.error('Error deleting store:', err);
      alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –º–∞–≥–∞–∑–∏–Ω—É');
    }
  };

  const handleDeleteRequest = async (requestId: string) => {
    if (!confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –∑–∞—è–≤–∫—É?')) {
      return;
    }

    try {
      await storeService.deleteStoreRequest(requestId);
      await loadStore();
      alert('–ó–∞—è–≤–∫—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ. –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –∑–∞—è–≤–∫—É.');
    } catch (err) {
      console.error('Error deleting request:', err);
      alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∑–∞—è–≤–∫–∏');
    }
  };

  const getRequestStatus = (request: StoreRequest) => {
    if (request.approvedByAdminId) return 'approved';
    if (request.rejectedByAdminId) return 'rejected';
    return 'pending';
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'pending': return 'yellow';
      case 'approved': return 'green';
      case 'rejected': return 'red';
      default: return 'gray';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'pending': return '–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ';
      case 'approved': return '–°—Ö–≤–∞–ª–µ–Ω–æ';
      case 'rejected': return '–í—ñ–¥—Ö–∏–ª–µ–Ω–æ';
      default: return '–ù–µ–≤—ñ–¥–æ–º–æ';
    }
  };

  const getPlanName = (plan: number) => {
    switch (plan) {
      case 0: return '–ë–∞–∑–æ–≤–∏–π';
      case 1: return '–ü—Ä–µ–º—ñ—É–º';
      case 2: return '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π';
      default: return '–ù–µ–≤—ñ–¥–æ–º–∏–π';
    }
  };

  if (isLoading) {
    return (
      <div className="flex min-h-screen flex-col">
        <Header />
        <main className="flex-1 bg-gray-100 flex items-center justify-center">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
            <p className="mt-4 text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–∞–≥–∞–∑–∏–Ω—É...</p>
          </div>
        </main>
        <SiteFooter />
      </div>
    );
  }

  if (error || !store) {
    return (
      <div className="flex min-h-screen flex-col">
        <Header />
        <main className="flex-1 bg-gray-100">
          <div className="mx-auto w-full max-w-4xl px-4 sm:px-6 lg:px-8 py-8">
            <div className="text-center">
              <div className="text-gray-400 text-6xl mb-4">üè™</div>
              <h3 className="text-lg font-medium text-gray-900 mb-2">–ú–∞–≥–∞–∑–∏–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
              <p className="text-gray-500 mb-6">{error}</p>
              <button
                onClick={() => router.push('/requests')}
                className="inline-flex items-center gap-2 rounded-xl border-2 border-[#4563d1] px-4 py-2 text-sm text-[#3046b4] hover:bg-[#4563d1]/10 transition-colors"
              >
                –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∑–∞—è–≤–æ–∫
              </button>
            </div>
          </div>
        </main>
        <SiteFooter />
      </div>
    );
  }

  return (
    <div className="flex min-h-screen flex-col">
      <Header />
      <main className="flex-1 bg-gray-100">
        <div className="mx-auto w-full max-w-4xl px-4 sm:px-6 lg:px-8 py-8">
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-gray-900 mb-2">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–∞–≥–∞–∑–∏–Ω–æ–º</h1>
            <p className="text-gray-600">–ö–µ—Ä—É–π—Ç–µ —Å–≤–æ—ó–º –º–∞–≥–∞–∑–∏–Ω–æ–º —Ç–∞ –π–æ–≥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏</p>
          </div>

          {/* –ú–∞–≥–∞–∑–∏–Ω */}
          <div className="bg-white rounded-lg shadow-sm border p-6 mb-6">
                  <div className="flex items-start justify-between">
                    <div className="flex items-start space-x-4">
                      {store.avatar ? (
                        <img
                          src={store.avatar.compressedUrl || store.avatar.sourceUrl}
                          alt={store.name}
                          className="w-16 h-16 rounded-lg object-cover"
                        />
                      ) : (
                        <div className="w-16 h-16 rounded-lg bg-gray-200 flex items-center justify-center">
                          <span className="text-2xl">üè™</span>
                        </div>
                      )}
                      
                      <div className="flex-1">
                        <h3 className="text-xl font-semibold text-gray-900 mb-2">{store.name}</h3>
                        <div className="space-y-2">
                          <div className="flex items-center gap-2">
                            <span className="text-sm text-gray-600">–ü–ª–∞–Ω:</span>
                            <span className="px-2 py-1 bg-blue-100 text-blue-800 text-sm rounded-full">
                              {getPlanName(store.plan)}
                            </span>
                          </div>
                          <div className="flex items-center gap-2">
                            <span className="text-sm text-gray-600">–°—Ç–≤–æ—Ä–µ–Ω–æ:</span>
                            <span className="text-sm text-gray-900">
                              {new Date(store.createdAt).toLocaleDateString('uk-UA')}
                            </span>
                          </div>
                          {store.roles && (
                            <div className="flex items-center gap-2">
                              <span className="text-sm text-gray-600">–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:</span>
                              <span className="text-sm text-gray-900">
                                {Object.keys(store.roles).length}
                              </span>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                    
                    <div className="flex items-center space-x-3">
                      <button
                  onClick={() => router.push(`/stores/${store.id}`)}
                        className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                      >
                  –î–µ—Ç–∞–ª—ñ
                      </button>
                      <button
                        onClick={() => handleDeleteStore(store.id)}
                        className="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
                      >
                        –í–∏–¥–∞–ª–∏—Ç–∏
                      </button>
                    </div>
                  </div>
                </div>

          {/* –ó–∞—è–≤–∫–∏ */}
          {storeRequests.length > 0 && (
            <div className="bg-white rounded-lg shadow-sm border p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">–í–∞—à—ñ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞–≥–∞–∑–∏–Ω—É</h3>
              <div className="space-y-4">
                {storeRequests.map((request) => {
                  const requestStatus = getRequestStatus(request);
                  return (
                    <div key={request.id} className={`rounded-lg border p-4 ${
                      getStatusColor(requestStatus) === 'yellow' ? 'bg-yellow-50 border-yellow-200' :
                      getStatusColor(requestStatus) === 'green' ? 'bg-green-50 border-green-200' :
                      getStatusColor(requestStatus) === 'red' ? 'bg-red-50 border-red-200' :
                      'bg-gray-50 border-gray-200'
                    }`}>
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <div className="flex items-center gap-2 mb-2">
                            <h4 className="font-semibold text-gray-900">{request.name}</h4>
                            <span className={`px-2 py-1 text-xs rounded-full ${
                              getStatusColor(requestStatus) === 'yellow' ? 'bg-yellow-100 text-yellow-800' :
                              getStatusColor(requestStatus) === 'green' ? 'bg-green-100 text-green-800' :
                              getStatusColor(requestStatus) === 'red' ? 'bg-red-100 text-red-800' :
                              'bg-gray-100 text-gray-800'
                            }`}>
                              {getStatusText(requestStatus)}
                            </span>
                          </div>
                          
                          <div className="text-sm text-gray-600">
                            <p>–ü–ª–∞–Ω: {getPlanName(request.plan)}</p>
                            <p>–°—Ç–≤–æ—Ä–µ–Ω–æ: {new Date(request.createdAt).toLocaleDateString('uk-UA')}</p>
                            {request.adminComment && (
                              <p className="mt-1 font-medium text-red-700">
                                –ö–æ–º–µ–Ω—Ç–∞—Ä –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {request.adminComment}
                              </p>
                            )}
                          </div>
                        </div>
                        
                        <div className="flex items-center space-x-2">
                          {requestStatus === 'pending' && (
                            <>
                              <button
                                onClick={() => window.location.href = `/auth/store?edit=${request.id}`}
                                className="px-3 py-1 text-sm bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition-colors"
                              >
                                –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                              </button>
                              <button
                                onClick={() => handleDeleteRequest(request.id)}
                                className="px-3 py-1 text-sm bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
                              >
                                –í–∏–¥–∞–ª–∏—Ç–∏
                              </button>
                            </>
                          )}
                          {requestStatus === 'approved' && (
                            <span className="text-sm text-green-600 font-medium">
                              –ú–∞–≥–∞–∑–∏–Ω —Å—Ç–≤–æ—Ä–µ–Ω–æ
                            </span>
                          )}
                          {requestStatus === 'rejected' && (
                            <div className="flex items-center space-x-2">
                              <button
                                onClick={() => handleDeleteRequest(request.id)}
                                className="px-3 py-1 text-sm bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
                              >
                                –í–∏–¥–∞–ª–∏—Ç–∏
                              </button>
                              <button
                                onClick={() => window.location.href = '/auth/store'}
                                className="px-3 py-1 text-sm bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                              >
                                –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É
                              </button>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          )}

          {/* –ö–Ω–æ–ø–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∑–∞—è–≤–∫–∏ */}
          <div className="bg-white rounded-lg shadow-sm border p-6">
            <div className="text-center">
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –∑–∞—è–≤–∫—É</h3>
              <p className="text-gray-600 mb-4">–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω—É</p>
              <button
                onClick={() => window.location.href = '/auth/store'}
                className="inline-flex items-center gap-2 rounded-xl border-2 border-[#4563d1] px-4 py-2 text-sm text-[#3046b4] hover:bg-[#4563d1]/10 transition-colors"
              >
                <span className="text-lg leading-none">+</span>
                <span>–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ –º–∞–≥–∞–∑–∏–Ω</span>
              </button>
            </div>
          </div>
        </div>
      </main>
      <SiteFooter />
    </div>
  );
}

